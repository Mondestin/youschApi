## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/health
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"status":"healthy","timestamp":"2025-08-26T11:51:07.277175Z","version":"1.0.0"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/version
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"version":"1.0.0","laravel_version":"12.25.0","php_version":"8.4.1"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/schools
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of schools.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campuses":[{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"school_id":1,"name":"East Campus","address":"789 Wisdom Road, East Quarter","phone":"+1-555-0125","email":"east@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"faculties":[{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"academic_years":[{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/schools?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/schools?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/schools?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/schools","per_page":15,"prev_page_url":null,"to":1,"total":1},"message":"Schools retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/schools
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/schools/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campuses":[{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"school_id":1,"name":"East Campus","address":"789 Wisdom Road, East Quarter","phone":"+1-555-0125","email":"east@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"faculties":[{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"academic_years":[{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"grading_schemes":[{"id":1,"school_id":1,"name":"Standard Grading Scale","description":"Standard A-F grading scale","min_score":"0.00","max_score":"100.00","passing_score":"60.00","grade_scale_type":"letter","created_by":2,"is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"school_admins":[]},"message":"School retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/schools/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/schools/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/schools/{school_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get school statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_campuses":3,"total_faculties":3,"total_departments":4,"total_courses":0,"total_students":8,"active_academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"message":"School statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/schools/{school_id}/campuses'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get campuses by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","classes":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}]},{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","classes":[]},{"id":3,"school_id":1,"name":"East Campus","address":"789 Wisdom Road, East Quarter","phone":"+1-555-0125","email":"east@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","classes":[]}],"message":"Campuses retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/campuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of campuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"classes":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"classes":[]},{"id":3,"school_id":1,"name":"East Campus","address":"789 Wisdom Road, East Quarter","phone":"+1-555-0125","email":"east@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"classes":[]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/campuses?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/campuses?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/campuses?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/campuses","per_page":15,"prev_page_url":null,"to":3,"total":3},"message":"Campuses retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/campuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/campuses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"classes":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"school_admins":[]},"message":"Campus retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/campuses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/campuses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/campuses/{campus_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get campus statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      campus_id:
        name: campus_id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      campus_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_classes":8,"total_students":8,"total_teachers":8,"total_subjects":0},"message":"Campus statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/academic-years
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of academic years.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"terms":[{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"academic_year_id":1,"name":"Spring Semester","start_date":"2025-01-15T00:00:00.000000Z","end_date":"2025-05-15T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"academic_year_id":1,"name":"Summer Session","start_date":"2025-06-01T00:00:00.000000Z","end_date":"2025-07-31T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/academic-years?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/academic-years?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/academic-years?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/academic-years","per_page":15,"prev_page_url":null,"to":1,"total":1},"message":"Academic years retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/academic-years
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/academic-years/{academicYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"terms":[{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"academic_year_id":1,"name":"Spring Semester","start_date":"2025-01-15T00:00:00.000000Z","end_date":"2025-05-15T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"academic_year_id":1,"name":"Summer Session","start_date":"2025-06-01T00:00:00.000000Z","end_date":"2025-07-31T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"student_enrollments":[{"id":1,"student_id":9,"class_id":6,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-27T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":2,"student_id":10,"class_id":8,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-16T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":10,"name":"Maria Garcia","email":"maria.garcia@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":3,"student_id":11,"class_id":8,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-14T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":11,"name":"James Wilson","email":"james.wilson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":4,"student_id":12,"class_id":3,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-13T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":12,"name":"Emma Davis","email":"emma.davis@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":5,"student_id":13,"class_id":5,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-30T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":13,"name":"Noah Brown","email":"noah.brown@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":6,"student_id":14,"class_id":1,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-29T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"student_id":15,"class_id":6,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-01T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":15,"name":"Lucas Anderson","email":"lucas.anderson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"student_id":16,"class_id":2,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-01T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"student_grades":[{"id":1,"student_id":9,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"78.00","max_score":"100.00","percentage":"78.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":2,"student_id":10,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"A","score":"92.00","max_score":"100.00","percentage":"92.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":10,"name":"Maria Garcia","email":"maria.garcia@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":3,"student_id":11,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":11,"name":"James Wilson","email":"james.wilson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":4,"student_id":12,"subject_id":3,"class_id":3,"exam_id":7,"academic_year_id":1,"term_id":1,"grade":"B","score":"83.00","max_score":"100.00","percentage":"83.00","remarks":"Good performance","graded_by":5,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":12,"name":"Emma Davis","email":"emma.davis@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":5,"student_id":13,"subject_id":4,"class_id":5,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"76.00","max_score":"100.00","percentage":"76.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":13,"name":"Noah Brown","email":"noah.brown@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"}},{"id":6,"student_id":14,"subject_id":1,"class_id":1,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"B","score":"89.00","max_score":"100.00","percentage":"89.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"student_id":14,"subject_id":2,"class_id":1,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"C","score":"74.00","max_score":"100.00","percentage":"74.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"student_id":15,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":15,"name":"Lucas Anderson","email":"lucas.anderson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":9,"student_id":16,"subject_id":1,"class_id":2,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":10,"student_id":16,"subject_id":2,"class_id":2,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"teacher_assignments":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":2,"teacher_id":5,"class_id":2,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":3,"teacher_id":6,"class_id":3,"subject_id":3,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":4,"teacher_id":7,"class_id":4,"subject_id":3,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":5,"teacher_id":4,"class_id":5,"subject_id":4,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":6,"teacher_id":5,"class_id":6,"subject_id":4,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":7,"teacher_id":6,"class_id":7,"subject_id":5,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":8,"teacher_id":7,"class_id":8,"subject_id":5,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}}]},"message":"Academic year retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/academic-years/{academicYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/academic-years/{academicYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/academic-years/{academicYear_id}/activate'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate an academic year (deactivate others).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/academic-years/{academicYear_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic year statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_terms":3,"total_students":8,"total_teachers":4,"total_classes":6,"total_subjects":5,"is_current":false},"message":"Academic year statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/academic-years/{academicYear_id}/terms'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get terms by academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"academic_year_id":1,"name":"Spring Semester","start_date":"2025-01-15T00:00:00.000000Z","end_date":"2025-05-15T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"academic_year_id":1,"name":"Summer Session","start_date":"2025-06-01T00:00:00.000000Z","end_date":"2025-07-31T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"message":"Terms retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/terms
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of terms.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},{"id":2,"academic_year_id":1,"name":"Spring Semester","start_date":"2025-01-15T00:00:00.000000Z","end_date":"2025-05-15T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},{"id":3,"academic_year_id":1,"name":"Summer Session","start_date":"2025-06-01T00:00:00.000000Z","end_date":"2025-07-31T00:00:00.000000Z","is_active":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/terms?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/terms?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/terms?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/terms","per_page":15,"prev_page_url":null,"to":3,"total":3},"message":"Terms retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/terms
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created term.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/terms/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified term.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"student_grades":[{"id":1,"student_id":9,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"78.00","max_score":"100.00","percentage":"78.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":10,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"A","score":"92.00","max_score":"100.00","percentage":"92.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":10,"name":"Maria Garcia","email":"maria.garcia@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":11,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":11,"name":"James Wilson","email":"james.wilson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"student_id":12,"subject_id":3,"class_id":3,"exam_id":7,"academic_year_id":1,"term_id":1,"grade":"B","score":"83.00","max_score":"100.00","percentage":"83.00","remarks":"Good performance","graded_by":5,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":12,"name":"Emma Davis","email":"emma.davis@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"student_id":13,"subject_id":4,"class_id":5,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"76.00","max_score":"100.00","percentage":"76.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":13,"name":"Noah Brown","email":"noah.brown@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"student_id":14,"subject_id":1,"class_id":1,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"B","score":"89.00","max_score":"100.00","percentage":"89.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"student_id":14,"subject_id":2,"class_id":1,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"C","score":"74.00","max_score":"100.00","percentage":"74.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"student_id":15,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":15,"name":"Lucas Anderson","email":"lucas.anderson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":9,"student_id":16,"subject_id":1,"class_id":2,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":10,"student_id":16,"subject_id":2,"class_id":2,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}]},"message":"Term retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/terms/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified term.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/terms/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified term.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/terms/{term_id}/activate'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate a term (deactivate others in the same academic year).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      term_id:
        name: term_id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      term_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/terms/{term_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get term statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      term_id:
        name: term_id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      term_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_students":8,"total_subjects":5,"total_grades":10,"is_current":false,"days_remaining":249.49383619516203},"message":"Term statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/faculties
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of faculties.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"departments":[{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"departments":[{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"departments":[{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/faculties?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/faculties?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/faculties?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/faculties","per_page":15,"prev_page_url":null,"to":3,"total":3},"message":"Faculties retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/faculties
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created faculty.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/faculties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified faculty.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"departments":[{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","head":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"courses":[{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","head":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"courses":[{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}]},"message":"Faculty retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/faculties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified faculty.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/faculties/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified faculty.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/faculties/{faculty_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: ''
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      faculty_id:
        name: faculty_id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      faculty_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/faculties/{faculty_id}/departments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get departments by faculty.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      faculty_id:
        name: faculty_id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      faculty_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","head":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"courses":[{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subjects":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}]},{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","head":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"courses":[{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subjects":[{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}]}],"message":"Departments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/departments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of departments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"head":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"courses":[{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"head":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"courses":[{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"head":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"courses":[{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"head":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"courses":[{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/departments?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/departments?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/departments?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/departments","per_page":15,"prev_page_url":null,"to":4,"total":4},"message":"Departments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/departments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created department.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/departments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified department.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"head":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"courses":[{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subjects":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}]},"message":"Department retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/departments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified department.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/departments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified department.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/departments/{department_id}/assign-head'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign a department head.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      department_id:
        name: department_id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      department_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/departments/{department_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get statistics for a department.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      department_id:
        name: department_id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      department_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/courses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of courses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"classes":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"classes":[{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"classes":[{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"classes":[{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/courses?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/courses?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/courses?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/courses","per_page":15,"prev_page_url":null,"to":4,"total":4},"message":"Courses retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/courses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created course.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/courses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified course.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"prerequisites":[]},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"prerequisites":[]}],"classes":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"student_enrollments":[{"id":6,"student_id":14,"class_id":1,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-29T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"student_enrollments":[{"id":8,"student_id":16,"class_id":2,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-01T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}]},"message":"Course retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/courses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified course.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/courses/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified course.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/courses/{course_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get course statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      course_id:
        name: course_id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      course_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_subjects":2,"total_classes":2,"total_students":2,"total_teachers":2},"message":"Course statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/courses/{course_id}/subjects'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subjects by course.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      course_id:
        name: course_id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      course_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"labs":[{"id":1,"subject_id":1,"name":"Programming Lab 1","description":"Computer lab for programming exercises","schedule":"Monday 2:00 PM - 4:00 PM","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"prerequisites":[]},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"labs":[],"prerequisites":[]}],"message":"Subjects retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/subjects
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of subjects.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"labs":[{"id":1,"subject_id":1,"name":"Programming Lab 1","description":"Computer lab for programming exercises","schedule":"Monday 2:00 PM - 4:00 PM","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"labs":[]},{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"labs":[]},{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"labs":[]},{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"labs":[]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/subjects?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/subjects?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/subjects?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/subjects","per_page":15,"prev_page_url":null,"to":5,"total":5},"message":"Subjects retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/subjects
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/subjects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"labs":[{"id":1,"subject_id":1,"name":"Programming Lab 1","description":"Computer lab for programming exercises","schedule":"Monday 2:00 PM - 4:00 PM","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"prerequisites":[],"required_by":[],"classes":[],"exams":[{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"name":"Final Exam - Introduction to Programming","type":"final","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-11T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"name":"Quiz Exam - Introduction to Programming","type":"quiz","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"student_grades":[{"id":6,"student_id":14,"subject_id":1,"class_id":1,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"B","score":"89.00","max_score":"100.00","percentage":"89.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":9,"student_id":16,"subject_id":1,"class_id":2,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},"message":"Subject retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/subjects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/subjects/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/subjects/{subject_id}/assign-coordinator'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign a subject coordinator.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/academics/subjects/{subject_id}/prerequisites'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add prerequisites to a subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/subjects/{subject_id}/prerequisites/{prerequisite_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a prerequisite from a subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      prerequisite_id:
        name: prerequisite_id
        description: 'The ID of the prerequisite.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
      prerequisite_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/subjects/{subject_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get subject statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_labs":1,"total_exams":3,"total_classes":0,"total_students":2,"prerequisites_count":0,"required_by_count":0},"message":"Subject statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/classes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of classes.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]},{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/classes?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/classes?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/classes?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/classes","per_page":15,"prev_page_url":null,"to":8,"total":8},"message":"Classes retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/classes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/classes/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[],"teachers":[],"timetables":[{"id":1,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":9,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":10,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":11,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":12,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":13,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":14,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":15,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":16,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":17,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":18,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":19,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":20,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"exams":[{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"name":"Final Exam - Introduction to Programming","type":"final","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-11T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"name":"Quiz Exam - Introduction to Programming","type":"quiz","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"name":"Midterm Exam - Data Structures and Algorithms","type":"midterm","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-12T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":5,"name":"Final Exam - Data Structures and Algorithms","type":"final","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-05T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":6,"name":"Quiz Exam - Data Structures and Algorithms","type":"quiz","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"student_enrollments":[{"id":6,"student_id":14,"class_id":1,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-29T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"teacher_assignments":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}}]},"message":"Class retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/classes/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/classes/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/classes/{class_id}/assign-subject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign a subject to a class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/classes/{class_id}/subjects/{subject_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove a subject from a class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/classes/{class_id}/assign-teacher'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign a teacher to a class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/classes/{class_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_subjects":0,"total_teachers":0,"total_students":1,"total_timetables":20,"total_exams":6,"enrollment_rate":3.3333333333333335},"message":"Class statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/timetables
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of timetables.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":41,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":51,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":71,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":11,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":21,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":91,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":31,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":81,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":61,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":22,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":12,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":62,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":2,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":32,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=1","from":1,"last_page":7,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=7","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=1","label":"1","page":1,"active":true},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=2","label":"2","page":2,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=3","label":"3","page":3,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=4","label":"4","page":4,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=5","label":"5","page":5,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=6","label":"6","page":6,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=7","label":"7","page":7,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=2","label":"Next &raquo;","page":2,"active":false}],"next_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables?page=2","path":"http:\/\/localhost:8000\/api\/admin\/academics\/timetables","per_page":15,"prev_page_url":null,"to":15,"total":100},"message":"Timetables retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/timetables
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created timetable entry.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified timetable entry.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},"message":"Timetable entry retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified timetable entry.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified timetable entry.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/timetables/class/{class_id}/timetable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class timetable.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":11,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":12,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":2,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":13,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":3,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":14,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":4,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":15,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":5,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":16,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":6,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":17,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":7,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":8,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":18,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":9,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":19,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T10:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":10,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 101","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":20,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"2025-08-26T14:00:00.000000Z","end_time":"2025-08-26T15:30:00.000000Z","room":"Room 102","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}}],"message":"Class timetable retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/timetables/teacher/{teacher_id}/timetable'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher timetable.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[],"message":"Teacher timetable retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/academics/timetables/class/{class_id}/generate-weekly'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate weekly timetable for a class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/exams
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of exams.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":10,"name":"Midterm Exam - Principles of Management","type":"midterm","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-09-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":7,"name":"Midterm Exam - Calculus I","type":"midterm","subject_id":3,"class_id":3,"coordinator_id":5,"exam_date":"2025-09-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Calculus I","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":14,"name":"Final Exam - Introduction to Literature","type":"final","subject_id":5,"class_id":7,"coordinator_id":7,"exam_date":"2025-09-29T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Literature","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":9,"name":"Quiz Exam - Calculus I","type":"quiz","subject_id":3,"class_id":3,"coordinator_id":5,"exam_date":"2025-10-02T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Calculus I","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":4,"name":"Midterm Exam - Data Structures and Algorithms","type":"midterm","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-12T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":8,"name":"Final Exam - Calculus I","type":"final","subject_id":3,"class_id":3,"coordinator_id":5,"exam_date":"2025-10-15T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Calculus I","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":12,"name":"Quiz Exam - Principles of Management","type":"quiz","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-10-16T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":3,"name":"Quiz Exam - Introduction to Programming","type":"quiz","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":15,"name":"Quiz Exam - Introduction to Literature","type":"quiz","subject_id":5,"class_id":7,"coordinator_id":7,"exam_date":"2025-10-30T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Literature","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":6,"name":"Quiz Exam - Data Structures and Algorithms","type":"quiz","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":5,"name":"Final Exam - Data Structures and Algorithms","type":"final","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-05T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":2,"name":"Final Exam - Introduction to Programming","type":"final","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-11T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":11,"name":"Final Exam - Principles of Management","type":"final","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-11-14T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}},{"id":13,"name":"Midterm Exam - Introduction to Literature","type":"midterm","subject_id":5,"class_id":7,"coordinator_id":7,"exam_date":"2025-11-22T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Literature","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/exams?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/exams?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/exams?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/exams","per_page":15,"prev_page_url":null,"to":15,"total":15},"message":"Exams retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/exams
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created exam.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/exams/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified exam.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the exam.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},"message":"Exam retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/exams/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified exam.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the exam.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/exams/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified exam.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the exam.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/exams/subject/{subject_id}/exams'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get exams by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":3,"name":"Quiz Exam - Introduction to Programming","type":"quiz","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":2,"name":"Final Exam - Introduction to Programming","type":"final","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-11T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}}],"message":"Subject exams retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/exams/class/{class_id}/exams'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get exams by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":4,"name":"Midterm Exam - Data Structures and Algorithms","type":"midterm","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-12T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":3,"name":"Quiz Exam - Introduction to Programming","type":"quiz","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":6,"name":"Quiz Exam - Data Structures and Algorithms","type":"quiz","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Quiz examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":5,"name":"Final Exam - Data Structures and Algorithms","type":"final","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-05T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":2,"name":"Final Exam - Introduction to Programming","type":"final","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-11T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Final examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"coordinator":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}}],"message":"Class exams retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/exams/upcoming
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get upcoming exams.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\AdminAcademics\\Exam] upcoming"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/exams/{exam_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get exam statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      exam_id:
        name: exam_id
        description: 'The ID of the exam.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      exam_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_students":1,"total_grades_recorded":2,"average_score":"78.000000","highest_score":"89.00","lowest_score":"67.00","days_until_exam":66.50616083403935,"is_past":false},"message":"Exam statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/grading-schemes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of grading schemes.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"school_id":1,"name":"Standard Grading Scale","description":"Standard A-F grading scale","min_score":"0.00","max_score":"100.00","passing_score":"60.00","grade_scale_type":"letter","created_by":2,"is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"grade_scales":[{"id":1,"grading_scheme_id":1,"grade":"A","min_score":"90.00","max_score":"100.00","grade_point":"4.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"grading_scheme_id":1,"grade":"B","min_score":"80.00","max_score":"89.99","grade_point":"3.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"grading_scheme_id":1,"grade":"C","min_score":"70.00","max_score":"79.99","grade_point":"2.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"grading_scheme_id":1,"grade":"D","min_score":"60.00","max_score":"69.99","grade_point":"1.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":5,"grading_scheme_id":1,"grade":"F","min_score":"0.00","max_score":"59.99","grade_point":"0.00","description":null,"is_passing":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/grading-schemes?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/grading-schemes?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/grading-schemes?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/grading-schemes","per_page":15,"prev_page_url":null,"to":1,"total":1},"message":"Grading schemes retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/grading-schemes
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created grading scheme.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified grading scheme.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"name":"Standard Grading Scale","description":"Standard A-F grading scale","min_score":"0.00","max_score":"100.00","passing_score":"60.00","grade_scale_type":"letter","created_by":2,"is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"grade_scales":[{"id":1,"grading_scheme_id":1,"grade":"A","min_score":"90.00","max_score":"100.00","grade_point":"4.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"grading_scheme_id":1,"grade":"B","min_score":"80.00","max_score":"89.99","grade_point":"3.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"grading_scheme_id":1,"grade":"C","min_score":"70.00","max_score":"79.99","grade_point":"2.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"grading_scheme_id":1,"grade":"D","min_score":"60.00","max_score":"69.99","grade_point":"1.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":5,"grading_scheme_id":1,"grade":"F","min_score":"0.00","max_score":"59.99","grade_point":"0.00","description":null,"is_passing":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]},"message":"Grading scheme retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified grading scheme.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified grading scheme.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}/activate'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate a grading scheme (deactivate others in the same school).'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grading-schemes/school/{school_id}/schemes'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get grading schemes by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"school_id":1,"name":"Standard Grading Scale","description":"Standard A-F grading scale","min_score":"0.00","max_score":"100.00","passing_score":"60.00","grade_scale_type":"letter","created_by":2,"is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","grade_scales":[{"id":1,"grading_scheme_id":1,"grade":"A","min_score":"90.00","max_score":"100.00","grade_point":"4.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"grading_scheme_id":1,"grade":"B","min_score":"80.00","max_score":"89.99","grade_point":"3.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":3,"grading_scheme_id":1,"grade":"C","min_score":"70.00","max_score":"79.99","grade_point":"2.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":4,"grading_scheme_id":1,"grade":"D","min_score":"60.00","max_score":"69.99","grade_point":"1.00","description":null,"is_passing":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":5,"grading_scheme_id":1,"grade":"F","min_score":"0.00","max_score":"59.99","grade_point":"0.00","description":null,"is_passing":false,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}],"message":"Grading schemes retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}/calculate-grade'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Calculate grade based on percentage.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grading-schemes/{gradingScheme_id}/statistics'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get grading scheme statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      gradingScheme_id:
        name: gradingScheme_id
        description: 'The ID of the gradingScheme.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      gradingScheme_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_grade_scales":5,"passing_percentage":null,"highest_grade_point":"4.0","lowest_grade_point":"0.0","is_active":true,"school_name":"Yousch International School"},"message":"Grading scheme statistics retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/enrollments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student enrollments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":2,"student_id":10,"class_id":8,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-16T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":10,"name":"Maria Garcia","email":"maria.garcia@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":11,"class_id":8,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-14T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":11,"name":"James Wilson","email":"james.wilson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"student_id":12,"class_id":3,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-13T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":12,"name":"Emma Davis","email":"emma.davis@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"student_id":15,"class_id":6,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-01T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":15,"name":"Lucas Anderson","email":"lucas.anderson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"student_id":16,"class_id":2,"academic_year_id":1,"status":"active","enrollment_date":"2025-07-01T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"student_id":13,"class_id":5,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-30T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":13,"name":"Noah Brown","email":"noah.brown@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"student_id":14,"class_id":1,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-29T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":1,"student_id":9,"class_id":6,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-27T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/enrollments?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/enrollments?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/enrollments?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/enrollments","per_page":15,"prev_page_url":null,"to":8,"total":8},"message":"Student enrollments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/enrollments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student enrollment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/enrollments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student enrollment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the enrollment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":9,"class_id":6,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-27T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}},"subjects":[]},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"message":"Student enrollment retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/enrollments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student enrollment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the enrollment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/enrollments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student enrollment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the enrollment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/enrollments/{enrollment_id}/change-status'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change enrollment status.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      enrollment_id:
        name: enrollment_id
        description: 'The ID of the enrollment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      enrollment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/enrollments/bulk-enroll
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk enroll students.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/enrollments/class/{class_id}/enrollments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get enrollments by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":6,"student_id":14,"class_id":1,"academic_year_id":1,"status":"active","enrollment_date":"2025-06-29T00:00:00.000000Z","notes":"Regular enrollment","enrolled_by":2,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"message":"Class enrollments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/enrollments/student/{student_id}/enrollments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get enrollments by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[],"message":"Student enrollments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/grades
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student grades.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"student_id":9,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"78.00","max_score":"100.00","percentage":"78.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":10,"name":"Midterm Exam - Principles of Management","type":"midterm","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-09-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":10,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"A","score":"92.00","max_score":"100.00","percentage":"92.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":10,"name":"Maria Garcia","email":"maria.garcia@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":13,"name":"Midterm Exam - Introduction to Literature","type":"midterm","subject_id":5,"class_id":7,"coordinator_id":7,"exam_date":"2025-11-22T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Literature","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":11,"subject_id":5,"class_id":8,"exam_id":13,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":7,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":11,"name":"James Wilson","email":"james.wilson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":13,"name":"Midterm Exam - Introduction to Literature","type":"midterm","subject_id":5,"class_id":7,"coordinator_id":7,"exam_date":"2025-11-22T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Literature","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"student_id":12,"subject_id":3,"class_id":3,"exam_id":7,"academic_year_id":1,"term_id":1,"grade":"B","score":"83.00","max_score":"100.00","percentage":"83.00","remarks":"Good performance","graded_by":5,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":12,"name":"Emma Davis","email":"emma.davis@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":7,"name":"Midterm Exam - Calculus I","type":"midterm","subject_id":3,"class_id":3,"coordinator_id":5,"exam_date":"2025-09-28T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Calculus I","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"student_id":13,"subject_id":4,"class_id":5,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"76.00","max_score":"100.00","percentage":"76.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":13,"name":"Noah Brown","email":"noah.brown@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":10,"name":"Midterm Exam - Principles of Management","type":"midterm","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-09-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"student_id":14,"subject_id":1,"class_id":1,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"B","score":"89.00","max_score":"100.00","percentage":"89.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"student_id":14,"subject_id":2,"class_id":1,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"C","score":"74.00","max_score":"100.00","percentage":"74.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":14,"name":"Sophia Lee","email":"sophia.lee@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":4,"name":"Midterm Exam - Data Structures and Algorithms","type":"midterm","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-12T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"student_id":15,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":15,"name":"Lucas Anderson","email":"lucas.anderson@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":10,"name":"Midterm Exam - Principles of Management","type":"midterm","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-09-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":9,"student_id":16,"subject_id":1,"class_id":2,"exam_id":1,"academic_year_id":1,"term_id":1,"grade":"D","score":"67.00","max_score":"100.00","percentage":"67.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":1,"name":"Midterm Exam - Introduction to Programming","type":"midterm","subject_id":1,"class_id":1,"coordinator_id":4,"exam_date":"2025-11-01T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Introduction to Programming","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":10,"student_id":16,"subject_id":2,"class_id":2,"exam_id":4,"academic_year_id":1,"term_id":1,"grade":"B","score":"81.00","max_score":"100.00","percentage":"81.00","remarks":"Good performance","graded_by":4,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":16,"name":"Olivia Taylor","email":"olivia.taylor@student.yousch.edu","email_verified_at":"2025-08-25T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":4,"name":"Midterm Exam - Data Structures and Algorithms","type":"midterm","subject_id":2,"class_id":1,"coordinator_id":4,"exam_date":"2025-10-12T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Data Structures and Algorithms","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/grades?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/grades?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/grades?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/grades","per_page":15,"prev_page_url":null,"to":10,"total":10},"message":"Student grades retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/grades
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student grade.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grades/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student grade.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":9,"subject_id":4,"class_id":6,"exam_id":10,"academic_year_id":1,"term_id":1,"grade":"C","score":"78.00","max_score":"100.00","percentage":"78.00","remarks":"Good performance","graded_by":6,"graded_at":"2025-08-25T16:09:23.000000Z","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":9,"name":"Alex Smith","email":"alex.smith@student.yousch.edu","email_verified_at":"2025-08-25T16:09:22.000000Z","created_at":"2025-08-25T16:09:22.000000Z","updated_at":"2025-08-25T16:09:22.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"exam":{"id":10,"name":"Midterm Exam - Principles of Management","type":"midterm","subject_id":4,"class_id":5,"coordinator_id":6,"exam_date":"2025-09-27T00:00:00.000000Z","start_time":"2025-08-26T09:00:00.000000Z","end_time":"2025-08-26T11:00:00.000000Z","duration_minutes":120,"total_marks":100,"passing_marks":60,"description":"Midterm examination for Principles of Management","instructions":"Please read all questions carefully before answering.","is_active":true,"school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"message":"Student grade retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/grades/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student grade.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/grades/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student grade.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the grade.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/grades/bulk-create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk create grades.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grades/student/{student_id}/grades'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get grades by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[],"message":"Student grades retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grades/class/{class_id}/grades'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get grades by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/grades/student/{student_id}/transcript'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student transcript.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"student":{"id":1,"name":"Test User","email":"test@example.com","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"transcript":[],"summary":{"total_subjects":0,"total_grades":0,"average_percentage":null,"highest_percentage":null,"lowest_percentage":null}},"message":"Student transcript retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/teacher-assignments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of teacher assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"teacher_id":5,"class_id":2,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"teacher_id":6,"class_id":3,"subject_id":3,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":4,"teacher_id":7,"class_id":4,"subject_id":3,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":2,"department_id":2,"name":"Bachelor of Mathematics","code":"BMATH","description":"Advanced mathematics program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":5,"teacher_id":4,"class_id":5,"subject_id":4,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":6,"teacher_id":5,"class_id":6,"subject_id":4,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":3,"department_id":3,"name":"Bachelor of Business Administration","code":"BBA","description":"Business management program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":7,"teacher_id":6,"class_id":7,"subject_id":5,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":6,"name":"Dr. Emily Rodriguez","email":"emily.rodriguez@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":8,"teacher_id":7,"class_id":8,"subject_id":5,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":7,"name":"Prof. David Thompson","email":"david.thompson@yousch.edu","email_verified_at":"2025-08-25T16:09:21.000000Z","created_at":"2025-08-25T16:09:21.000000Z","updated_at":"2025-08-25T16:09:21.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":4,"faculty_id":3,"name":"English Literature","head_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":3,"school_id":1,"name":"Faculty of Arts and Humanities","description":"Exploring creativity, culture, and human expression","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":4,"department_id":4,"name":"Bachelor of Arts in English","code":"BAENG","description":"English literature and language program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/teacher-assignments?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/teacher-assignments?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/teacher-assignments?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/teacher-assignments","per_page":15,"prev_page_url":null,"to":8,"total":8},"message":"Teacher assignments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/teacher-assignments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/teacher-assignments/{assignment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      assignment_id:
        name: assignment_id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      assignment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"message":"Teacher assignment retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/teacher-assignments/{assignment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      assignment_id:
        name: assignment_id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      assignment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/teacher-assignments/{assignment_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      assignment_id:
        name: assignment_id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      assignment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/teacher-assignments/{assignment_id}/deactivate'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Deactivate a teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      assignment_id:
        name: assignment_id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      assignment_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/teacher-assignments/teacher/{teacher_id}/assignments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher assignments by teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[],"message":"Teacher assignments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/teacher-assignments/class/{class_id}/assignments'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher assignments by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-25T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"message":"Class teacher assignments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/teacher-assignments/teacher/{teacher_id}/workload-summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher workload summary.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_classes":0,"total_subjects":0,"total_weekly_hours":0,"primary_teacher_assignments":0,"assistant_teacher_assignments":0,"substitute_teacher_assignments":0,"assignments_by_academic_year":[]},"message":"Teacher workload summary retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/announcements
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of announcements.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"current_page":1,"data":[{"id":3,"title":"Computer Science Lab Schedule Update","content":"The programming lab schedule has been updated. Please check your timetables.","scope":"class","priority":"normal","school_id":1,"campus_id":1,"class_id":1,"is_active":true,"is_urgent":false,"publish_date":"2025-08-24T16:09:23.000000Z","expiry_date":"2025-09-08T16:09:23.000000Z","created_by":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"students","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},{"id":2,"title":"Campus Maintenance Notice","content":"Scheduled maintenance will be conducted on the main campus this weekend. Please plan accordingly.","scope":"campus","priority":"normal","school_id":1,"campus_id":1,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-23T16:09:23.000000Z","expiry_date":"2025-09-01T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":null},{"id":1,"title":"Welcome to New Academic Year 2024-2025!","content":"We are excited to welcome all students to the new academic year. Classes begin on September 1st, 2024.","scope":"school","priority":"high","school_id":1,"campus_id":null,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-20T16:09:23.000000Z","expiry_date":"2025-09-24T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":null,"class_room":null}],"first_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/announcements?page=1","from":1,"last_page":1,"last_page_url":"http:\/\/localhost:8000\/api\/admin\/academics\/announcements?page=1","links":[{"url":null,"label":"&laquo; Previous","page":null,"active":false},{"url":"http:\/\/localhost:8000\/api\/admin\/academics\/announcements?page=1","label":"1","page":1,"active":true},{"url":null,"label":"Next &raquo;","page":null,"active":false}],"next_page_url":null,"path":"http:\/\/localhost:8000\/api\/admin\/academics\/announcements","per_page":15,"prev_page_url":null,"to":3,"total":3},"message":"Announcements retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/academics/announcements
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created announcement.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/announcements/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified announcement.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the announcement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"title":"Welcome to New Academic Year 2024-2025!","content":"We are excited to welcome all students to the new academic year. Classes begin on September 1st, 2024.","scope":"school","priority":"high","school_id":1,"campus_id":null,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-20T16:09:23.000000Z","expiry_date":"2025-09-24T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":null,"class_room":null},"message":"Announcement retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/academics/announcements/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified announcement.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the announcement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/academics/announcements/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified announcement.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the announcement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/academics/announcements/{announcement_id}/toggle-status'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Activate/deactivate an announcement.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      announcement_id:
        name: announcement_id
        description: 'The ID of the announcement.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      announcement_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/announcements/school/{school_id}/announcements'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get announcements by school.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":3,"title":"Computer Science Lab Schedule Update","content":"The programming lab schedule has been updated. Please check your timetables.","scope":"class","priority":"normal","school_id":1,"campus_id":1,"class_id":1,"is_active":true,"is_urgent":false,"publish_date":"2025-08-24T16:09:23.000000Z","expiry_date":"2025-09-08T16:09:23.000000Z","created_by":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"students","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},{"id":2,"title":"Campus Maintenance Notice","content":"Scheduled maintenance will be conducted on the main campus this weekend. Please plan accordingly.","scope":"campus","priority":"normal","school_id":1,"campus_id":1,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-23T16:09:23.000000Z","expiry_date":"2025-09-01T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":null},{"id":1,"title":"Welcome to New Academic Year 2024-2025!","content":"We are excited to welcome all students to the new academic year. Classes begin on September 1st, 2024.","scope":"school","priority":"high","school_id":1,"campus_id":null,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-20T16:09:23.000000Z","expiry_date":"2025-09-24T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","campus":null,"class_room":null}],"message":"School announcements retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/announcements/campus/{campus_id}/announcements'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get announcements by campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      campus_id:
        name: campus_id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      campus_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":3,"title":"Computer Science Lab Schedule Update","content":"The programming lab schedule has been updated. Please check your timetables.","scope":"class","priority":"normal","school_id":1,"campus_id":1,"class_id":1,"is_active":true,"is_urgent":false,"publish_date":"2025-08-24T16:09:23.000000Z","expiry_date":"2025-09-08T16:09:23.000000Z","created_by":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"students","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","course":{"id":1,"department_id":1,"name":"Bachelor of Computer Science","code":"BCS","description":"Comprehensive computer science program","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}}},{"id":2,"title":"Campus Maintenance Notice","content":"Scheduled maintenance will be conducted on the main campus this weekend. Please plan accordingly.","scope":"campus","priority":"normal","school_id":1,"campus_id":1,"class_id":null,"is_active":true,"is_urgent":false,"publish_date":"2025-08-23T16:09:23.000000Z","expiry_date":"2025-09-01T16:09:23.000000Z","created_by":{"id":2,"name":"System Administrator","email":"admin@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"all","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":null}],"message":"Campus announcements retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/announcements/class/{class_id}/announcements'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get announcements by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":3,"title":"Computer Science Lab Schedule Update","content":"The programming lab schedule has been updated. Please check your timetables.","scope":"class","priority":"normal","school_id":1,"campus_id":1,"class_id":1,"is_active":true,"is_urgent":false,"publish_date":"2025-08-24T16:09:23.000000Z","expiry_date":"2025-09-08T16:09:23.000000Z","created_by":{"id":4,"name":"Dr. Sarah Johnson","email":"sarah.johnson@yousch.edu","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"},"target_audience":"students","attachments":[],"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"message":"Class announcements retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/announcements/urgent
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get urgent announcements.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\AdminAcademics\\Announcement] urgent"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/announcements/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get announcement statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\AdminAcademics\\Announcement] statistics"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/school/{school_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get comprehensive school analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      school_id:
        name: school_id
        description: 'The ID of the school.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      school_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve school analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\School::departments()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/campus/{campus_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get campus analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      campus_id:
        name: campus_id
        description: 'The ID of the campus.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      campus_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve campus analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\Campus::studentEnrollments()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/faculty/{faculty_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get faculty analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      faculty_id:
        name: faculty_id
        description: 'The ID of the faculty.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      faculty_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve faculty analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\Faculty::courses()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/department/{department_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get department analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      department_id:
        name: department_id
        description: 'The ID of the department.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      department_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve department analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\Department::subjects()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/course/{course_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get course analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      course_id:
        name: course_id
        description: 'The ID of the course.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      course_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve course analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\Course::studentEnrollments()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/academics/analytics/class/{class_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve class analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\ClassRoom::studentGrades()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/analytics/teacher-workload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher workload analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"success":false,"message":"Teacher ID is required"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/analytics/student-performance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student performance analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"success":false,"message":"Student ID is required"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/academics/analytics/system
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get system-wide analytics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve system analytics","error":"Call to undefined method App\\Models\\AdminAcademics\\School::departments()"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/applications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student applications.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"school_id":1,"campus_id":1,"first_name":"John","last_name":"Doe","dob":"2008-05-15T00:00:00.000000Z","gender":"male","email":"john.doe@example.com","phone":"+1234567890","parent_name":"Robert Doe","parent_email":"robert.doe@example.com","parent_phone":"+1234567891","status":"pending","applied_on":"2025-08-20T16:09:23.000000Z","reviewed_on":null,"reviewer_id":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":null},{"id":2,"school_id":1,"campus_id":1,"first_name":"Jane","last_name":"Smith","dob":"2007-08-22T00:00:00.000000Z","gender":"female","email":"jane.smith@example.com","phone":"+1234567892","parent_name":"Mary Smith","parent_email":"mary.smith@example.com","parent_phone":"+1234567893","status":"approved","applied_on":"2025-08-15T16:09:23.000000Z","reviewed_on":"2025-08-17T16:09:23.000000Z","reviewer_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":{"id":1,"name":"Test User","email":"test@example.com","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}},{"id":3,"school_id":1,"campus_id":1,"first_name":"Michael","last_name":"Johnson","dob":"2006-12-03T00:00:00.000000Z","gender":"male","email":"michael.johnson@example.com","phone":"+1234567894","parent_name":"David Johnson","parent_email":"david.johnson@example.com","parent_phone":"+1234567895","status":"rejected","applied_on":"2025-08-10T16:09:23.000000Z","reviewed_on":"2025-08-13T16:09:23.000000Z","reviewer_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":{"id":1,"name":"Test User","email":"test@example.com","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/applications
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/applications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"campus_id":1,"first_name":"John","last_name":"Doe","dob":"2008-05-15T00:00:00.000000Z","gender":"male","email":"john.doe@example.com","phone":"+1234567890","parent_name":"Robert Doe","parent_email":"robert.doe@example.com","parent_phone":"+1234567891","status":"pending","applied_on":"2025-08-20T16:09:23.000000Z","reviewed_on":null,"reviewer_id":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":null}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/applications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/applications/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the application.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/students/applications/{application_id}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      application_id:
        name: application_id
        description: 'The ID of the application.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      application_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/students/applications/{application_id}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a student application.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      application_id:
        name: application_id
        description: 'The ID of the application.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      application_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/applications/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get application statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_applications":3,"pending_applications":1,"approved_applications":0,"rejected_applications":0,"recent_applications":0,"approval_rate":0,"applications_by_gender":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/students
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of students.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025003","first_name":"Emily","last_name":"Davis","dob":"2004-07-12T00:00:00.000000Z","gender":"female","email":"emily.davis@example.com","phone":"+1234567900","parent_name":"Thomas Davis","parent_email":"thomas.davis@example.com","parent_phone":"+1234567901","enrollment_date":"2023-09-01T00:00:00.000000Z","status":"graduated","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/students
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/students/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_history":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}],"documents":[{"id":1,"student_id":1,"document_type":"Birth Certificate","document_path":"students\/documents\/birth_cert_001.pdf","original_filename":"birth_certificate.pdf","mime_type":"application\/pdf","file_size":1024000,"uploaded_at":"2025-08-15T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},{"id":2,"student_id":1,"document_type":"ID Card","document_path":"students\/documents\/id_card_001.jpg","original_filename":"student_id_card.jpg","mime_type":"image\/jpeg","file_size":512000,"uploaded_at":"2025-08-20T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/students/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/students/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/students/students/{student_id}/status'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Change student status.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PATCH
    uri: 'api/admin/students/students/{student_id}/class'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Assign student to class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/students/{student_id}/academic-performance'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student academic performance.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},"academic_history":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"performance_summary":{"overall_gpa":3.5,"total_subjects":2,"passing_subjects":2,"failing_subjects":0,"pass_rate":100}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/students/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_students":3,"active_students":2,"graduated_students":0,"transferred_students":0,"suspended_students":0,"inactive_students":0,"recent_enrollments":0,"students_by_gender":[],"students_by_class":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/academic-history
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of academic history records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":2,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"78.50","grade":"C+","gpa":"2.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/academic-history
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created academic history record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/{academicHistory_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified academic history record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicHistory_id:
        name: academicHistory_id
        description: 'The ID of the academicHistory.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicHistory_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/academic-history/{academicHistory_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified academic history record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicHistory_id:
        name: academicHistory_id
        description: 'The ID of the academicHistory.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicHistory_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/academic-history/{academicHistory_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified academic history record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicHistory_id:
        name: academicHistory_id
        description: 'The ID of the academicHistory.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicHistory_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/student/{student_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history records by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student_id:
        name: student_id
        description: 'The ID of the student.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"student":{"id":1,"first_name":"Sarah","last_name":"Wilson","student_number":"STU2025001"},"academic_records":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"total_records":2,"overall_gpa":3.5}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/subject/{subject_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history records by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"subject":{"id":1,"name":"Introduction to Programming","code":"CS101"},"academic_records":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":2,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"78.50","grade":"C+","gpa":"2.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"total_records":2,"average_marks":82,"average_gpa":2.8}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/class/{class}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history records by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"class":{"id":null,"name":null},"academic_records":[],"total_records":0,"unique_students":0,"unique_subjects":0,"average_gpa":0}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/term/{term_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history records by term.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      term_id:
        name: term_id
        description: 'The ID of the term.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      term_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"term":{"id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z"},"academic_records":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":2,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"78.50","grade":"C+","gpa":"2.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"academic_year":{"id":1,"school_id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"total_records":3,"unique_students":2,"unique_subjects":2,"average_gpa":3.1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/academic-history/academic-year/{academicYear_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history records by academic year.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear_id:
        name: academicYear_id
        description: 'The ID of the academicYear.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"academic_year":{"id":1,"name":"2024-2025","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2025-06-30T00:00:00.000000Z"},"academic_records":[{"id":1,"student_id":1,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"85.50","grade":"B+","gpa":"3.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":2,"student_id":1,"subject_id":2,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"92.00","grade":"A-","gpa":"3.70","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":2,"subject_id":1,"class_id":1,"term_id":1,"academic_year_id":1,"marks":"78.50","grade":"C+","gpa":"2.30","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"term":{"id":1,"academic_year_id":1,"name":"Fall Semester","start_date":"2024-09-01T00:00:00.000000Z","end_date":"2024-12-20T00:00:00.000000Z","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"total_records":3,"unique_students":2,"unique_subjects":2,"unique_classes":1,"average_gpa":3.1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/academic-history/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic history statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_records":3,"records_with_grades":3,"records_with_gpa":3,"passing_records":3,"failing_records":0,"pass_rate":100,"average_marks":0,"average_gpa":0,"grade_distribution":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/transfers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student transfers.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"student_id":1,"from_campus_id":1,"to_campus_id":2,"request_date":"2025-07-26T00:00:00.000000Z","approved_date":null,"status":"pending","reviewer_id":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"from_campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"to_campus":{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":null},{"id":2,"student_id":2,"from_campus_id":1,"to_campus_id":2,"request_date":"2025-07-11T00:00:00.000000Z","approved_date":"2025-07-16T00:00:00.000000Z","status":"approved","reviewer_id":1,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"from_campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"to_campus":{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":{"id":1,"name":"Test User","email":"test@example.com","email_verified_at":"2025-08-25T16:09:20.000000Z","created_at":"2025-08-25T16:09:20.000000Z","updated_at":"2025-08-25T16:09:20.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":2}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/transfers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/transfers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transfer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":1,"from_campus_id":1,"to_campus_id":2,"request_date":"2025-07-26T00:00:00.000000Z","approved_date":null,"status":"pending","reviewer_id":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"from_campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"to_campus":{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"},"reviewer":null}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/transfers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transfer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/transfers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the transfer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/students/transfers/{transfer_id}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      transfer_id:
        name: transfer_id
        description: 'The ID of the transfer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      transfer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/students/transfers/{transfer_id}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a student transfer.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      transfer_id:
        name: transfer_id
        description: 'The ID of the transfer.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      transfer_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/transfers/student/{student}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get transfers by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student:
        name: student
        description: 'The student.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/transfers/campus/{campus}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get transfers by campus.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      campus:
        name: campus
        description: 'The campus.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      campus: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/transfers/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get transfer statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_transfers":2,"pending_transfers":1,"approved_transfers":0,"rejected_transfers":0,"recent_transfers":0,"approval_rate":0,"average_processing_days":5}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/graduation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student graduations.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"student_id":3,"graduation_date":"2024-06-15T00:00:00.000000Z","diploma_number":"DIP2024001","status":"issued","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":3,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025003","first_name":"Emily","last_name":"Davis","dob":"2004-07-12T00:00:00.000000Z","gender":"female","email":"emily.davis@example.com","phone":"+1234567900","parent_name":"Thomas Davis","parent_email":"thomas.davis@example.com","parent_phone":"+1234567901","enrollment_date":"2023-09-01T00:00:00.000000Z","status":"graduated","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":1}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/graduation
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student graduation.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/graduation/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student graduation.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the graduation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":3,"graduation_date":"2024-06-15T00:00:00.000000Z","diploma_number":"DIP2024001","status":"issued","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":3,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025003","first_name":"Emily","last_name":"Davis","dob":"2004-07-12T00:00:00.000000Z","gender":"female","email":"emily.davis@example.com","phone":"+1234567900","parent_name":"Thomas Davis","parent_email":"thomas.davis@example.com","parent_phone":"+1234567901","enrollment_date":"2023-09-01T00:00:00.000000Z","status":"graduated","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/graduation/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student graduation.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the graduation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/graduation/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student graduation.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the graduation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/admin/students/graduation/{graduation_id}/issue'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Issue the diploma.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      graduation_id:
        name: graduation_id
        description: 'The ID of the graduation.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      graduation_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/graduation/student/{student}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get graduations by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student:
        name: student
        description: 'The student.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/graduation/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get graduations by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Students\\StudentGraduation] date-range"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/graduation/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get graduation statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"total_graduations":1,"pending_graduations":0,"issued_graduations":0,"recent_graduations":0,"issuance_rate":0,"graduations_by_year":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/documents
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student documents.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":2,"student_id":1,"document_type":"ID Card","document_path":"students\/documents\/id_card_001.jpg","original_filename":"student_id_card.jpg","mime_type":"image\/jpeg","file_size":512000,"uploaded_at":"2025-08-20T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":1,"student_id":1,"document_type":"Birth Certificate","document_path":"students\/documents\/birth_cert_001.pdf","original_filename":"birth_certificate.pdf","mime_type":"application\/pdf","file_size":1024000,"uploaded_at":"2025-08-15T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}},{"id":3,"student_id":2,"document_type":"Transcript","document_path":"students\/documents\/transcript_001.pdf","original_filename":"academic_transcript.pdf","mime_type":"application\/pdf","file_size":2048000,"uploaded_at":"2025-08-10T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":2,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025002","first_name":"David","last_name":"Brown","dob":"2005-11-25T00:00:00.000000Z","gender":"male","email":"david.brown@example.com","phone":"+1234567898","parent_name":"Patricia Brown","parent_email":"patricia.brown@example.com","parent_phone":"+1234567899","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}],"pagination":{"current_page":1,"last_page":1,"per_page":15,"total":3}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/documents
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student document.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student document.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"student_id":1,"document_type":"Birth Certificate","document_path":"students\/documents\/birth_cert_001.pdf","original_filename":"birth_certificate.pdf","mime_type":"application\/pdf","file_size":1024000,"uploaded_at":"2025-08-15T16:09:23.000000Z","created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z","student":{"id":1,"school_id":1,"campus_id":1,"class_id":1,"student_number":"STU2025001","first_name":"Sarah","last_name":"Wilson","dob":"2006-03-18T00:00:00.000000Z","gender":"female","email":"sarah.wilson@example.com","phone":"+1234567896","parent_name":"James Wilson","parent_email":"james.wilson@example.com","parent_phone":"+1234567897","enrollment_date":"2024-09-01T00:00:00.000000Z","status":"active","profile_picture":null,"created_at":"2025-08-25T16:09:23.000000Z","updated_at":"2025-08-25T16:09:23.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/admin/students/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student document.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/admin/students/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student document.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/documents/student/{student}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      student:
        name: student
        description: 'The student.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      student: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/documents/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by type.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/documents/upload
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Upload a new document file.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/admin/students/documents/download/{document_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Download the specified document.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document_id:
        name: document_id
        description: 'The ID of the document.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: '{"success":false,"message":"Document file not found"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/documents/statistics/overview
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get document statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Unable to retrieve statistics"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/bulk/students/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk import students.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/bulk/students/export
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk export students.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/bulk/academic-history/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk import academic history records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/admin/students/bulk/academic-history/export
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk export academic history records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/reports/enrollment-trends
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get enrollment trends report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"trends":[],"summary":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/reports/academic-performance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get academic performance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"performance":[],"summary":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/reports/transfer-analysis
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get transfer analysis report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"analysis":[],"summary":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/reports/graduation-analysis
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get graduation analysis report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"analysis":[],"summary":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/admin/students/reports/student-demographics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student demographics report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"demographics":[],"summary":[]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/teachers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teachers'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/teachers
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/department/{department}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teachers by department'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      department:
        name: department
        description: 'The department.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      department: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/faculty/{faculty}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teachers by faculty'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      faculty:
        name: faculty
        description: 'The faculty.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      faculty: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/teachers/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/documents
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/{document}/download'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Download the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/documents/{document}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/documents/{document}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/teacher/{teacher}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by type'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/status/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by status'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/pending
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/expired
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get expired documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get document statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/assignments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of teacher assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/assignments
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academic_year:
        name: academic_year
        description: 'Must not be greater than 9 characters.'
        required: true
        example: ngzmiyv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: 'Must not be greater than 20 characters.'
        required: true
        example: dljnikhwaykcmyuw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hours_per_week:
        name: hours_per_week
        description: 'Must be at least 1. Must not be greater than 40.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 500 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      teacher_id: architecto
      class_id: architecto
      subject_id: architecto
      academic_year: ngzmiyv
      term: dljnikhwaykcmyuw
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
      hours_per_week: 22
      is_active: false
      notes: g
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academic_year:
        name: academic_year
        description: 'Must not be greater than 9 characters.'
        required: false
        example: bngzmiy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: 'Must not be greater than 20 characters.'
        required: false
        example: vdljnikhwaykcmyu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>start_date</code>.'
        required: false
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      hours_per_week:
        name: hours_per_week
        description: 'Must be at least 1. Must not be greater than 40.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 500 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      academic_year: bngzmiy
      term: vdljnikhwaykcmyu
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
      hours_per_week: 22
      is_active: true
      notes: g
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/teacher/{teacher_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/class/{class}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/subject/{subject}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject:
        name: subject
        description: 'The subject.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/assignments/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignment statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Teachers\\TeacherAssignment] statistics"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/timetables
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher timetables'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/timetables
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/teacher/{teacher}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/class/{class}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by class'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/subject/{subject}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by subject'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject:
        name: subject
        description: 'The subject.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/day/{day}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by day of week'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      day:
        name: day
        description: 'The day.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      day: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/academic-year/{academicYear}/term/{term}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by academic year and term'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: 'The term.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/teacher/{teacher}/weekly-schedule/{academicYear}/{term}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher weekly schedule'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/class/{class}/weekly-schedule/{academicYear}/{term}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class weekly schedule'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/timetables/check-conflicts
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check time conflicts'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/timetables/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher leaves'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/leaves
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/leaves/{leave}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/leaves/{leave}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/teacher/{teacher}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/type/{type}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by type'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/status/{status}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by status'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves/pending
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending leaves'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leave statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/performance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher performances'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/performance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/performance/{performance}/publish'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Publish a performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      performance:
        name: performance
        description: 'The performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      performance: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/performance/{performance}/archive'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive a performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      performance:
        name: performance
        description: 'The performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      performance: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/teacher/{teacher}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/evaluator/{evaluator}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by evaluator'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      evaluator:
        name: evaluator
        description: 'The evaluator.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      evaluator: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/period/{period}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by period'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      period:
        name: period
        description: 'The period.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      period: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/performance/rating-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by rating range'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/trends/{teacher}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher performance trends'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/performance/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performance statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/bulk/assignments/import
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk import assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      assignments:
        name: assignments
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].teacher_id':
        name: 'assignments[].teacher_id'
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].class_id':
        name: 'assignments[].class_id'
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].subject_id':
        name: 'assignments[].subject_id'
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].academic_year':
        name: 'assignments[].academic_year'
        description: 'Must not be greater than 9 characters.'
        required: true
        example: ngzmiyv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].term':
        name: 'assignments[].term'
        description: 'Must not be greater than 20 characters.'
        required: true
        example: dljnikhwaykcmyuw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].start_date':
        name: 'assignments[].start_date'
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].end_date':
        name: 'assignments[].end_date'
        description: 'Must be a valid date. Must be a date after <code>assignments.*.start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].hours_per_week':
        name: 'assignments[].hours_per_week'
        description: 'Must be at least 1. Must not be greater than 40.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      assignments:
        -
          teacher_id: architecto
          class_id: architecto
          subject_id: architecto
          academic_year: ngzmiyv
          term: dljnikhwaykcmyuw
          start_date: '2025-08-26T11:51:08'
          end_date: '2051-09-19'
          hours_per_week: 22
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/bulk/assignments/export
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk export assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/reports/assignment-analysis
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate assignment analysis report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/student-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_id:
        name: student_id
        description: 'The <code>id</code> of an existing record in the students table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lab_id:
        name: lab_id
        description: 'The <code>id</code> of an existing record in the labs table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      timetable_id:
        name: timetable_id
        description: 'The <code>id</code> of an existing record in the teacher_timetables table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: absent
        type: string
        enumValues:
          - present
          - absent
          - late
          - excused
        exampleWasSpecified: false
        nullable: false
        custom: []
      remarks:
        name: remarks
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      student_id: architecto
      class_id: architecto
      subject_id: architecto
      timetable_id: architecto
      date: '2025-08-26T11:51:08'
      status: absent
      remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/attendance/student-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: ''
        required: false
        example: excused
        type: string
        enumValues:
          - present
          - absent
          - late
          - excused
        exampleWasSpecified: false
        nullable: false
        custom: []
      remarks:
        name: remarks
        description: 'Must not be greater than 500 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      status: excused
      remarks: b
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/attendance/student-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/student/{studentId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studentId:
        name: studentId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studentId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/class/{classId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/subject/{subjectId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subjectId:
        name: subjectId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subjectId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/date/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: 'The date.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      date: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/student-attendance/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/class/{classId}/summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class attendance summary for a specific date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      date: '2025-08-26T11:51:08'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/student/{studentId}/summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get student attendance summary for a date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studentId:
        name: studentId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studentId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-attendance/student/{studentId}/trends'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance trends for a student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studentId:
        name: studentId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studentId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-attendance/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-attendance/report
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate attendance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of teacher attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/teacher-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lab_id:
        name: lab_id
        description: 'The <code>id</code> of an existing record in the labs table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      timetable_id:
        name: timetable_id
        description: 'The <code>id</code> of an existing record in the teacher_timetables table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      status:
        name: status
        description: ''
        required: true
        example: present
        type: string
        enumValues:
          - present
          - absent
          - late
        exampleWasSpecified: false
        nullable: false
        custom: []
      remarks:
        name: remarks
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      teacher_id: architecto
      class_id: architecto
      subject_id: architecto
      timetable_id: architecto
      date: '2025-08-26T11:51:08'
      status: present
      remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/attendance/teacher-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      status:
        name: status
        description: ''
        required: false
        example: late
        type: string
        enumValues:
          - present
          - absent
          - late
        exampleWasSpecified: false
        nullable: false
        custom: []
      remarks:
        name: remarks
        description: 'Must not be greater than 500 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      status: late
      remarks: b
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/attendance/teacher-attendance/{attendance_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher attendance record.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      attendance_id:
        name: attendance_id
        description: 'The ID of the attendance.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      attendance_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/teacher/{teacherId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacherId:
        name: teacherId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacherId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/class/{classId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/subject/{subjectId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subjectId:
        name: subjectId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subjectId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/date/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: 'The date.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      date: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/teacher-attendance/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/class/{classId}/summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class attendance summary for a specific date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      date: '2025-08-26T11:51:08'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/teacher/{teacherId}/summary'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher attendance summary for a date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacherId:
        name: teacherId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacherId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-attendance/teacher/{teacherId}/trends'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance trends for a teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacherId:
        name: teacherId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacherId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-attendance/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-attendance/report
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate attendance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of student attendance excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/student-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created student attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      student_id:
        name: student_id
        description: 'The <code>id</code> of an existing record in the students table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lab_id:
        name: lab_id
        description: 'The <code>id</code> of an existing record in the labs table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      document:
        name: document
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      student_id: architecto
      class_id: architecto
      subject_id: architecto
      date: '2025-08-26T11:51:08'
      reason: 'n'
    fileParameters:
      document: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified student attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/attendance/student-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified student attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      document:
        name: document
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: b
    fileParameters:
      document: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/attendance/student-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified student attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/student/{studentId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studentId:
        name: studentId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studentId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/class/{classId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/subject/{subjectId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subjectId:
        name: subjectId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subjectId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/date/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: 'The date.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      date: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/student-excuses/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses/pending
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses/approved
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get approved excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses/rejected
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get rejected excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/attendance/student-excuses/{excuse_id}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve an excuse request.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/attendance/student-excuses/{excuse_id}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject an excuse request.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/student-excuses/report
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate excuse report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/student-excuses/student/{studentId}/trends'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse trends for a student.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      studentId:
        name: studentId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      studentId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of teacher attendance excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/teacher-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      lab_id:
        name: lab_id
        description: 'The <code>id</code> of an existing record in the labs table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      date:
        name: date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      reason:
        name: reason
        description: 'Must not be greater than 255 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      document:
        name: document
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      teacher_id: architecto
      class_id: architecto
      subject_id: architecto
      date: '2025-08-26T11:51:08'
      reason: 'n'
    fileParameters:
      document: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/attendance/teacher-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      reason:
        name: reason
        description: 'Must not be greater than 255 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      document:
        name: document
        description: 'Must be a file. Must not be greater than 2048 kilobytes.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      reason: b
    fileParameters:
      document: null
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/attendance/teacher-excuses/{excuse_id}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher attendance excuse.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/teacher/{teacherId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacherId:
        name: teacherId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacherId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/class/{classId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      classId:
        name: classId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      classId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/subject/{subjectId}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subjectId:
        name: subjectId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subjectId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/date/{date}'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by date.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      date:
        name: date
        description: 'The date.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      date: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/teacher-excuses/date-range
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuses by date range.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses/pending
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses/approved
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get approved excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses/rejected
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get rejected excuses.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/attendance/teacher-excuses/{excuse_id}/approve'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve an excuse request.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/attendance/teacher-excuses/{excuse_id}/reject'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject an excuse request.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      excuse_id:
        name: excuse_id
        description: 'The ID of the excuse.'
        required: true
        example: 16
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      excuse_id: 16
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses/statistics
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/teacher-excuses/report
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate excuse report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/attendance/teacher-excuses/teacher/{teacherId}/trends'
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse trends for a teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacherId:
        name: teacherId
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacherId: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      start_date:
        name: start_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
        required: true
        example: '2051-09-19'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      start_date: '2025-08-26T11:51:08'
      end_date: '2051-09-19'
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/bulk/student-attendance/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk create attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attendance_data:
        name: attendance_data
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].student_id':
        name: 'attendance_data[].student_id'
        description: 'The <code>id</code> of an existing record in the students table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].class_id':
        name: 'attendance_data[].class_id'
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].subject_id':
        name: 'attendance_data[].subject_id'
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].timetable_id':
        name: 'attendance_data[].timetable_id'
        description: 'The <code>id</code> of an existing record in the teacher_timetables table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].date':
        name: 'attendance_data[].date'
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].status':
        name: 'attendance_data[].status'
        description: ''
        required: true
        example: present
        type: string
        enumValues:
          - present
          - absent
          - late
          - excused
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].remarks':
        name: 'attendance_data[].remarks'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      attendance_data:
        -
          student_id: architecto
          class_id: architecto
          subject_id: architecto
          timetable_id: architecto
          date: '2025-08-26T11:51:08'
          status: present
          remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/bulk/student-attendance/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk update attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attendance_data:
        name: attendance_data
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].id':
        name: 'attendance_data[].id'
        description: 'The <code>id</code> of an existing record in the student_attendance table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].status':
        name: 'attendance_data[].status'
        description: ''
        required: false
        example: excused
        type: string
        enumValues:
          - present
          - absent
          - late
          - excused
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].remarks':
        name: 'attendance_data[].remarks'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      attendance_data:
        -
          id: architecto
          status: excused
          remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/bulk/teacher-attendance/create
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk create attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attendance_data:
        name: attendance_data
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].teacher_id':
        name: 'attendance_data[].teacher_id'
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].class_id':
        name: 'attendance_data[].class_id'
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].subject_id':
        name: 'attendance_data[].subject_id'
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].timetable_id':
        name: 'attendance_data[].timetable_id'
        description: 'The <code>id</code> of an existing record in the teacher_timetables table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].date':
        name: 'attendance_data[].date'
        description: 'Must be a valid date.'
        required: true
        example: '2025-08-26T11:51:08'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].status':
        name: 'attendance_data[].status'
        description: ''
        required: true
        example: late
        type: string
        enumValues:
          - present
          - absent
          - late
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].remarks':
        name: 'attendance_data[].remarks'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      attendance_data:
        -
          teacher_id: architecto
          class_id: architecto
          subject_id: architecto
          timetable_id: architecto
          date: '2025-08-26T11:51:08'
          status: late
          remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/attendance/bulk/teacher-attendance/update
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk update attendance records.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      attendance_data:
        name: attendance_data
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].id':
        name: 'attendance_data[].id'
        description: 'The <code>id</code> of an existing record in the teacher_attendance table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].status':
        name: 'attendance_data[].status'
        description: ''
        required: false
        example: late
        type: string
        enumValues:
          - present
          - absent
          - late
        exampleWasSpecified: false
        nullable: false
        custom: []
      'attendance_data[].remarks':
        name: 'attendance_data[].remarks'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      attendance_data:
        -
          id: architecto
          status: late
          remarks: 'n'
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/student-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate attendance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/teacher-attendance
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate attendance report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/student-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate excuse report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/teacher-excuses
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate excuse report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/student-attendance/stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/teacher-attendance/stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get attendance statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/student-excuses/stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/attendance/reports/teacher-excuses/stats
    metadata:
      groupName: Endpoints
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get excuse statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []

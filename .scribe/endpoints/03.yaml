name: Teachers
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/teachers/teachers
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teachers'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":5,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2025-08-30T00:00:00.000000Z","gender":"male","email":"sydneymodestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-08-22T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T16:54:16.000000Z","updated_at":"2025-08-31T22:58:14.000000Z","department_id":2,"faculty_id":1,"school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"campus":{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"department":{"id":2,"faculty_id":1,"name":"Mathematics","head_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"faculty":{"id":1,"school_id":1,"name":"Faculty of Science and Technology","description":"Leading research and education in science and technology","created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":4,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2024-08-07T00:00:00.000000Z","gender":"female","email":"sydneymondestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-09-27T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T05:51:43.000000Z","updated_at":"2025-08-31T05:51:43.000000Z","department_id":3,"faculty_id":2,"school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"campus":{"id":2,"school_id":1,"name":"North Campus","address":"456 Learning Avenue, North District","phone":"+1-555-0124","email":"north@yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"department":{"id":3,"faculty_id":2,"name":"Business Administration","head_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"faculty":{"id":2,"school_id":1,"name":"Faculty of Business and Economics","description":"Preparing future business leaders and economists","created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":2,"school_id":1,"campus_id":1,"first_name":"Sarah","last_name":"Johnson","dob":"1990-07-22T00:00:00.000000Z","gender":"female","email":"sarah.johnson@university.edu","phone":"+1234567891","address":"456 College Blvd, City, State 12345","hire_date":"2022-01-10T00:00:00.000000Z","employment_type":"full-time","qualification":"M.S. in Computer Science","specialization":"Database Systems, Web Development","status":"active","profile_picture":null,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","department_id":1,"faculty_id":4,"school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"faculty":{"id":4,"school_id":1,"name":"Faculty of Engineering","description":"Faculty of Engineering and Technology","created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":3,"school_id":1,"campus_id":1,"first_name":"Michael","last_name":"Brown","dob":"1988-11-08T00:00:00.000000Z","gender":"male","email":"michael.brown@university.edu","phone":"+1234567892","address":"789 Campus Dr, City, State 12345","hire_date":"2021-09-01T00:00:00.000000Z","employment_type":"part-time","qualification":"Ph.D. in Information Technology","specialization":"Cybersecurity, Network Security","status":"active","profile_picture":null,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","department_id":1,"faculty_id":4,"school":{"id":1,"name":"Yousch International School","domain":"yousch.edu","contact_info":"Contact us for more information","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"info@yousch.edu","website":"https:\/\/www.yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"campus":{"id":1,"school_id":1,"name":"Main Campus","address":"123 Education Street, Knowledge City","phone":"+1-555-0123","email":"main@yousch.edu","is_active":true,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"department":{"id":1,"faculty_id":1,"name":"Computer Science","head_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"faculty":{"id":4,"school_id":1,"name":"Faculty of Engineering","description":"Faculty of Engineering and Technology","created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}],"message":"Teachers retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/teachers
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/teachers/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/department/{department}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teachers by department'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      department:
        name: department
        description: 'The department.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      department: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/teachers/faculty/{faculty}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teachers by faculty'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      faculty:
        name: faculty
        description: 'The faculty.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      faculty: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/teachers/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve teacher documents: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''created_at'' in ''order clause'' (Connection: mysql, SQL: select * from `teacher_documents` order by `created_at` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/documents
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/documents/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/{document}/download'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Download the specified teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/documents/{document}/approve'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/documents/{document}/reject'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a teacher document'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      document:
        name: document
        description: 'The document.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      document: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/teacher/{teacher}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/type/{type}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by type'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve documents: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''created_at'' in ''order clause'' (Connection: mysql, SQL: select * from `teacher_documents` where `document_type` = architecto order by `created_at` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/documents/status/{status}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get documents by status'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve documents: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''status'' in ''where clause'' (Connection: mysql, SQL: select * from `teacher_documents` where `status` = architecto order by `created_at` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/pending
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/expired
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get expired documents'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/documents/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get document statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/assignments
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a listing of teacher assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":9,"teacher_id":3,"class_id":5,"subject_id":5,"academic_year_id":1,"role":"assistant","is_primary":false,"is_active":true,"assigned_by":4,"assignment_date":"2025-09-09T00:00:00.000000Z","end_date":"2025-09-27T00:00:00.000000Z","weekly_hours":10,"notes":"feferer","school_id":1,"created_at":"2025-09-09T00:37:41.000000Z","updated_at":"2025-09-09T00:37:41.000000Z","teacher":{"id":3,"school_id":1,"campus_id":1,"first_name":"Michael","last_name":"Brown","dob":"1988-11-08T00:00:00.000000Z","gender":"male","email":"michael.brown@university.edu","phone":"+1234567892","address":"789 Campus Dr, City, State 12345","hire_date":"2021-09-01T00:00:00.000000Z","employment_type":"part-time","qualification":"Ph.D. in Information Technology","specialization":"Cybersecurity, Network Security","status":"active","profile_picture":null,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","department_id":1,"faculty_id":4},"class":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":4,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2024-08-07T00:00:00.000000Z","gender":"female","email":"sydneymondestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-09-27T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T05:51:43.000000Z","updated_at":"2025-08-31T05:51:43.000000Z","department_id":3,"faculty_id":2},"class":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":2,"teacher_id":5,"class_id":2,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":5,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2025-08-30T00:00:00.000000Z","gender":"male","email":"sydneymodestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-08-22T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T16:54:16.000000Z","updated_at":"2025-08-31T22:58:14.000000Z","department_id":2,"faculty_id":1},"class":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}],"message":"Teacher assignments retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/assignments
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academic_year_id:
        name: academic_year_id
        description: 'The <code>id</code> of an existing record in the academic_years table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Must not be greater than 50 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_primary:
        name: is_primary
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_by:
        name: assigned_by
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assignment_date:
        name: assignment_date
        description: 'Must be a valid date.'
        required: true
        example: '2025-09-09T00:52:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>assignment_date</code>.'
        required: false
        example: '2051-10-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      weekly_hours:
        name: weekly_hours
        description: 'Must be at least 0. Must not be greater than 40.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 500 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      school_id:
        name: school_id
        description: 'The <code>id</code> of an existing record in the schools table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      teacher_id: architecto
      class_id: architecto
      subject_id: architecto
      academic_year_id: architecto
      role: 'n'
      is_primary: true
      is_active: false
      assigned_by: ashly64@example.com
      assignment_date: '2025-09-09T00:52:38'
      end_date: '2051-10-03'
      weekly_hours: 22
      notes: g
      school_id: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":4,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2024-08-07T00:00:00.000000Z","gender":"female","email":"sydneymondestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-09-27T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T05:51:43.000000Z","updated_at":"2025-08-31T05:51:43.000000Z","department_id":3,"faculty_id":2},"class":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      teacher_id:
        name: teacher_id
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      class_id:
        name: class_id
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      subject_id:
        name: subject_id
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academic_year_id:
        name: academic_year_id
        description: 'The <code>id</code> of an existing record in the academic_years table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'Must not be greater than 50 characters.'
        required: false
        example: b
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_primary:
        name: is_primary
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assigned_by:
        name: assigned_by
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: false
        example: zbailey@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      assignment_date:
        name: assignment_date
        description: 'Must be a valid date.'
        required: false
        example: '2025-09-09T00:52:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      end_date:
        name: end_date
        description: 'Must be a valid date. Must be a date after <code>assignment_date</code>.'
        required: false
        example: '2051-10-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      weekly_hours:
        name: weekly_hours
        description: 'Must be at least 0. Must not be greater than 40.'
        required: false
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      is_active:
        name: is_active
        description: ''
        required: false
        example: true
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      notes:
        name: notes
        description: 'Must not be greater than 500 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      school_id:
        name: school_id
        description: 'The <code>id</code> of an existing record in the schools table.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      role: b
      is_primary: false
      assigned_by: zbailey@example.net
      assignment_date: '2025-09-09T00:52:38'
      end_date: '2051-10-03'
      weekly_hours: 22
      is_active: true
      notes: g
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/assignments/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher assignment.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the assignment.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/teacher/{teacher_id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by teacher.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher_id:
        name: teacher_id
        description: 'The ID of the teacher.'
        required: true
        example: 2
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher_id: 2
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/class/{class_id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by class.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class_id:
        name: class_id
        description: 'The ID of the class.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":4,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2024-08-07T00:00:00.000000Z","gender":"female","email":"sydneymondestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-09-27T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T05:51:43.000000Z","updated_at":"2025-08-31T05:51:43.000000Z","department_id":3,"faculty_id":2},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/assignments/subject/{subject_id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignments by subject.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject_id:
        name: subject_id
        description: 'The ID of the subject.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"teacher_id":4,"class_id":1,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":4,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2024-08-07T00:00:00.000000Z","gender":"female","email":"sydneymondestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-09-27T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T05:51:43.000000Z","updated_at":"2025-08-31T05:51:43.000000Z","department_id":3,"faculty_id":2},"class":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":2,"teacher_id":5,"class_id":2,"subject_id":1,"academic_year_id":1,"role":"teacher","is_primary":true,"is_active":true,"assigned_by":2,"assignment_date":"2025-08-31T00:00:00.000000Z","end_date":null,"weekly_hours":0,"notes":"Primary teacher assignment","school_id":1,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z","teacher":{"id":5,"school_id":1,"campus_id":2,"first_name":"Mondestin","last_name":"MYSSIE","dob":"2025-08-30T00:00:00.000000Z","gender":"male","email":"sydneymodestin@gmail.com","phone":"+33753754960","address":"6 ROUTE DE STALINGRAD\nAppt 232","hire_date":"2025-08-22T00:00:00.000000Z","employment_type":"full-time","qualification":"Ph.D. in Computer Science","specialization":"Software Engineering, Algorithms","status":"active","profile_picture":null,"created_at":"2025-08-31T16:54:16.000000Z","updated_at":"2025-08-31T22:58:14.000000Z","department_id":2,"faculty_id":1},"class":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}]}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/assignments/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get assignment statistics.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 404
        content: |-
          {
              "message": "No query results for model [App\\Models\\Teachers\\TeacherAssignment] statistics"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/timetables
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher timetables'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":[{"id":1,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":51,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":41,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":21,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":61,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":31,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":71,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":11,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":81,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":91,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":62,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":92,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":42,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":2,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":52,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":22,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":32,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":82,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":12,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":72,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-25T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":93,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":33,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":43,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":63,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":53,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":83,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":73,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":23,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":13,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":3,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":54,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":4,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":74,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":44,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":84,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":64,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":24,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":94,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":34,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":14,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-26T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":55,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":5,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":85,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":75,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":45,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":95,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":15,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":25,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":35,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":65,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":76,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":56,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":66,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":16,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":96,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":26,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":36,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":86,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":6,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":46,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-27T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":87,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":7,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":77,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":67,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":97,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":37,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":17,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":57,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":27,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":47,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":98,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":18,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":8,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":48,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":78,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":58,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":68,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":38,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":28,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":88,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-28T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":89,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":49,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":19,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":79,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":59,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":9,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":29,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":99,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":69,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":39,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"09:00","end_time":"10:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":30,"class_id":2,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":40,"class_id":2,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":2,"campus_id":1,"course_id":1,"name":"BCS - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":20,"class_id":1,"subject_id":2,"teacher_id":5,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 102","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":5,"name":"Prof. Michael Chen","email":"michael.chen@yousch.edu","email_verified_at":"2025-08-31T00:54:38.000000Z","created_at":"2025-08-31T00:54:38.000000Z","updated_at":"2025-08-31T00:54:38.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":2,"course_id":1,"name":"Data Structures and Algorithms","code":"CS201","description":"Advanced programming concepts","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":90,"class_id":7,"subject_id":5,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":7,"campus_id":1,"course_id":4,"name":"BAENG - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":50,"class_id":3,"subject_id":3,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":3,"campus_id":1,"course_id":2,"name":"BMATH - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":80,"class_id":6,"subject_id":4,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":6,"campus_id":1,"course_id":3,"name":"BBA - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":10,"class_id":1,"subject_id":1,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":1,"campus_id":1,"course_id":1,"name":"BCS - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":1,"course_id":1,"name":"Introduction to Programming","code":"CS101","description":"Basic programming concepts and practices","coordinator_id":4,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":60,"class_id":4,"subject_id":3,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":4,"campus_id":1,"course_id":2,"name":"BMATH - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":3,"course_id":2,"name":"Calculus I","code":"MATH101","description":"Fundamental calculus concepts","coordinator_id":5,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":70,"class_id":5,"subject_id":4,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":5,"campus_id":1,"course_id":3,"name":"BBA - Class A","capacity":30,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":4,"course_id":3,"name":"Principles of Management","code":"BUS101","description":"Basic management principles","coordinator_id":6,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}},{"id":100,"class_id":8,"subject_id":5,"teacher_id":4,"date":"2025-08-29T00:00:00.000000Z","start_time":"14:00","end_time":"15:30","room":"Room 101","created_at":"2025-08-31 00:54:40","updated_at":"2025-08-31 00:54:40","teacher":{"id":4,"name":"Dr. Sarah Johnson","email":"sydneymondestin@gmail.com","email_verified_at":"2025-08-31T00:54:37.000000Z","created_at":"2025-08-31T00:54:37.000000Z","updated_at":"2025-08-31T00:54:37.000000Z"},"class_room":{"id":8,"campus_id":1,"course_id":4,"name":"BAENG - Class B","capacity":25,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"},"subject":{"id":5,"course_id":4,"name":"Introduction to Literature","code":"ENG101","description":"Literary analysis and appreciation","coordinator_id":7,"created_at":"2025-08-31T00:54:40.000000Z","updated_at":"2025-08-31T00:54:40.000000Z"}}],"message":"Teacher timetables retrieved successfully"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/timetables
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/timetables/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified teacher timetable entry'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the timetable.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/teacher/{teacher}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/class/{class}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by class'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/subject/{subject}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by subject'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      subject:
        name: subject
        description: 'The subject.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      subject: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/day/{day}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by day of week'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      day:
        name: day
        description: 'The day.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      day: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 422
        content: '{"success":false,"message":"Invalid day of week","errors":{"day_of_week":["The selected day of week is invalid."]}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/academic-year/{academicYear}/term/{term}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable by academic year and term'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: 'The term.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/teacher/{teacher}/weekly-schedule/{academicYear}/{term}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher weekly schedule'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/timetables/class/{class}/weekly-schedule/{academicYear}/{term}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get class weekly schedule'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      class:
        name: class
        description: 'The class.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      academicYear:
        name: academicYear
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      term:
        name: term
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      class: architecto
      academicYear: architecto
      term: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/timetables/check-conflicts
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Check time conflicts'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/timetables/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get timetable statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher leaves'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve teacher leaves: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''start_date'' in ''order clause'' (Connection: mysql, SQL: select * from `teacher_leaves` order by `start_date` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/leaves
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/leaves/{leave}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/leaves/{leave}/approve'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Approve a leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/leaves/{leave}/reject'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Reject a leave request'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      leave:
        name: leave
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      leave: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/teacher/{teacher}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/type/{type}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by type'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      type:
        name: type
        description: 'The type.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      type: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve leaves: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''leave_type'' in ''where clause'' (Connection: mysql, SQL: select * from `teacher_leaves` where `leave_type` = architecto order by `start_date` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/leaves/status/{status}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leaves by status'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      status:
        name: status
        description: 'The status.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      status: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve leaves: SQLSTATE[42S22]: Column not found: 1054 Unknown column ''status'' in ''where clause'' (Connection: mysql, SQL: select * from `teacher_leaves` where `status` = architecto order by `start_date` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves/pending
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get pending leaves'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/leaves/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get leave statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/performance
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display a paginated list of teacher performances'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve teacher performances: SQLSTATE[42S02]: Base table or view not found: 1146 Table ''yousch.teacher_performance'' doesn''t exist (Connection: mysql, SQL: select * from `teacher_performance` order by `evaluation_date` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/performance
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Store a newly created performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Display the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/teachers/performance/{id}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Remove the specified performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/performance/{performance}/publish'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Publish a performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      performance:
        name: performance
        description: 'The performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      performance: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/teachers/performance/{performance}/archive'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Archive a performance evaluation'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      performance:
        name: performance
        description: 'The performance.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      performance: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/teacher/{teacher}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by teacher'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: 'The teacher.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/evaluator/{evaluator}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by evaluator'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      evaluator:
        name: evaluator
        description: 'The evaluator.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      evaluator: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/period/{period}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by period'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      period:
        name: period
        description: 'The period.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      period: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: '{"success":false,"message":"Failed to retrieve period performances: SQLSTATE[42S02]: Base table or view not found: 1146 Table ''yousch.teacher_performance'' doesn''t exist (Connection: mysql, SQL: select * from `teacher_performance` where `evaluation_period` like %architecto% order by `evaluation_date` desc)"}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/performance/rating-range
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performances by rating range'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/teachers/performance/trends/{teacher}'
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get teacher performance trends'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      teacher:
        name: teacher
        description: ''
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      teacher: architecto
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/performance/statistics
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get performance statistics'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 500
        content: |-
          {
              "message": "Server Error"
          }
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/bulk/assignments/import
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk import assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      assignments:
        name: assignments
        description: 'Must have at least 1 items.'
        required: true
        example:
          - []
        type: 'object[]'
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].teacher_id':
        name: 'assignments[].teacher_id'
        description: 'The <code>id</code> of an existing record in the teachers table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].class_id':
        name: 'assignments[].class_id'
        description: 'The <code>id</code> of an existing record in the classes table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].subject_id':
        name: 'assignments[].subject_id'
        description: 'The <code>id</code> of an existing record in the subjects table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].academic_year_id':
        name: 'assignments[].academic_year_id'
        description: 'The <code>id</code> of an existing record in the academic_years table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].role':
        name: 'assignments[].role'
        description: 'Must not be greater than 50 characters.'
        required: true
        example: 'n'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].is_primary':
        name: 'assignments[].is_primary'
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].assigned_by':
        name: 'assignments[].assigned_by'
        description: 'Must be a valid email address. The <code>email</code> of an existing record in the users table.'
        required: true
        example: ashly64@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].assignment_date':
        name: 'assignments[].assignment_date'
        description: 'Must be a valid date.'
        required: true
        example: '2025-09-09T00:52:38'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].end_date':
        name: 'assignments[].end_date'
        description: 'Must be a valid date. Must be a date after <code>assignments.*.assignment_date</code>.'
        required: false
        example: '2051-10-03'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'assignments[].weekly_hours':
        name: 'assignments[].weekly_hours'
        description: 'Must be at least 0. Must not be greater than 40.'
        required: true
        example: 22
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].is_active':
        name: 'assignments[].is_active'
        description: ''
        required: false
        example: false
        type: boolean
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      'assignments[].notes':
        name: 'assignments[].notes'
        description: 'Must not be greater than 500 characters.'
        required: false
        example: g
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      'assignments[].school_id':
        name: 'assignments[].school_id'
        description: 'The <code>id</code> of an existing record in the schools table.'
        required: true
        example: architecto
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      assignments:
        -
          teacher_id: architecto
          class_id: architecto
          subject_id: architecto
          academic_year_id: architecto
          role: 'n'
          is_primary: false
          assigned_by: ashly64@example.com
          assignment_date: '2025-09-09T00:52:38'
          end_date: '2051-10-03'
          weekly_hours: 22
          is_active: false
          notes: g
          school_id: architecto
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/teachers/bulk/assignments/export
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Bulk export assignments.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/teachers/reports/assignment-analysis
    metadata:
      groupName: Teachers
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Generate assignment analysis report.'
      description: ''
      authenticated: false
      deprecated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"success":true,"data":{"summary":{"total_assignments":3,"unique_teachers":3,"unique_classes":3,"unique_subjects":2,"total_hours":0},"assignments_by_faculty":{"Faculty of Business and Economics":{"count":1,"teachers":1,"total_hours":0},"Faculty of Science and Technology":{"count":2,"teachers":2,"total_hours":0}},"assignments_by_department":{"Business Administration":{"count":1,"teachers":1,"total_hours":0},"Mathematics":{"count":1,"teachers":1,"total_hours":0},"Computer Science":{"count":1,"teachers":1,"total_hours":0}},"assignments_by_term":{"":{"count":3,"teachers":3,"total_hours":0}},"teacher_workload":{"":{"assignments":3,"classes":3,"subjects":2,"total_hours":0}}}}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
